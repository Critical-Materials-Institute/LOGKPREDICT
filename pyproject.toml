[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "logkpredict"
version = "2.0.0"
description = "A computational chemistry tool for predicting stability constants (log K values) of metal-ligand complexes"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Federico Zahariev", email = "fzahariev@iastate.edu"},
    {name = "Marilú Pérez García"}
]
keywords = ["computational chemistry", "machine learning", "molecular descriptors", "stability constants", "chemprop"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Chemistry",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "rdkit>=2022.09.1",
    "chemprop>=1.6.1",
    "click>=8.0.0",
    "pandas>=1.3.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]

[project.scripts]
logkpredict-cli = "logk_lib.cli:main"

[project.urls]
Homepage = "https://github.com/Critical-Materials-Institute/LOGKPREDICT"
Repository = "https://github.com/Critical-Materials-Institute/LOGKPREDICT"
Documentation = "https://github.com/Critical-Materials-Institute/LOGKPREDICT#readme"
"Bug Tracker" = "https://github.com/Critical-Materials-Institute/LOGKPREDICT/issues"

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
logk_lib = ["data/*"]

# Keep HostDesigner compatibility files in main directory
[tool.setuptools.exclude-package-data]
"*" = ["model.pt", "logk_input", "logk_output", "LOGKPREDICT"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["logk_lib"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]